{"version":3,"sources":["buttons.ts","components/HomeIcon.tsx","components/NavBar.tsx","components/ResponsiveMenu.tsx","components/common/StyledTextH2.tsx","components/common/StyledTextH3.tsx","components/common/StyledTextLink.tsx","components/Sections/ContactSection.tsx","components/Sections/FirstSection.tsx","components/Sections/SlideSection.tsx","components/FullPages.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["buttonList","name","useStyles","makeStyles","theme","iconButton","marginRight","spacing","HomeIcon","props","classes","IconButton","onClick","className","Avatar","alt","src","root","flexGrow","position","left","right","appBar","backgroundColor","toolBar","alignSelf","NavBar","id","Hidden","xsDown","AppBar","elevation","Toolbar","fullpageApi","moveTo","map","button","i","Button","color","top","zIndex","homeIcon","display","justifyContent","ResponsiveMenu","useState","anchorEl","setAnchorEl","smUp","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","StyledTextH2","Typography","variant","children","StyledTextH3","StyledTextLink","mailLink","Link","href","textAlign","paper","height","width","control","padding","icon","minWidth","ContactSection","Grid","item","xs","container","justify","aria-label","window","flexDirection","paddingLeft","fontWeight","alignContent","StyledNameText","withStyles","fontSize","m","textOverflow","component","Box","FirstSection","Container","mb","SlideSection","FullPages","scrollOverflow","sectionsColor","anchors","menu","render","App","prefersDarkMode","useMediaQuery","React","useMemo","createMuiTheme","palette","type","primary","main","contrastText","text","breakpoints","values","sm","md","lg","xl","overrides","MuiTypography","marginBlockStart","marginBlockEnd","h1","h2","h3","ThemeProvider","CssBaseline","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d066e221.chunk.js","sourcesContent":["export interface IButton {\n  name: string\n}\n\nexport const buttonList = [\n  {\n    name: 'PROFESSIONAL',\n  },\n  {\n    name: 'EXPERIENCE',\n  },\n  {\n    name: 'PORTFOLIO',\n  },\n  {\n    name: 'CONTACT',\n  },\n]\n","import { Avatar, IconButton } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport React from 'react'\n\nconst useStyles = makeStyles(theme => ({\n  iconButton: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\ninterface HomeIconProps {\n  onClick: () => void\n}\n\nconst HomeIcon: React.FC<HomeIconProps> = props => {\n  const classes = useStyles()\n\n  return (\n    <IconButton onClick={props.onClick} className={classes.iconButton}>\n      <Avatar alt=\":)\" src=\"smile6.png\" />\n    </IconButton>\n  )\n}\n\nexport default HomeIcon\n","import { Hidden } from '@material-ui/core'\nimport AppBar from '@material-ui/core/AppBar'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport React from 'react'\nimport { buttonList, IButton } from '../buttons'\nimport { IfullpageApi } from './FullPages'\nimport HomeIcon from './HomeIcon'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    position: 'fixed',\n    left: 0,\n    right: 0,\n  },\n  iconButton: {\n    marginRight: theme.spacing(2),\n  },\n  appBar: {\n    backgroundColor: 'rgba(0, 0, 0, 0)',\n  },\n  toolBar: {\n    alignSelf: 'center',\n  },\n}))\n\ninterface NavBarProps {\n  fullpageApi: IfullpageApi\n}\n\nconst NavBar: React.FC<NavBarProps> = props => {\n  const classes = useStyles()\n\n  return (\n    <div id=\"myMenu\" className={classes.root}>\n      <Hidden xsDown>\n        <AppBar className={classes.appBar} elevation={0}>\n          <Toolbar className={classes.toolBar}>\n            <HomeIcon onClick={() => props.fullpageApi.moveTo(1)} />\n            {buttonList.map((button: IButton, i: number) => (\n              <Button color=\"inherit\" onClick={() => props.fullpageApi.moveTo(i + 2)}>\n                {button.name}\n              </Button>\n            ))}\n          </Toolbar>\n        </AppBar>\n      </Hidden>\n    </div>\n  )\n}\n\nexport default NavBar\n","import { Hidden, IconButton, makeStyles, Menu, MenuItem } from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport React, { useState } from 'react'\nimport { buttonList, IButton } from '../buttons'\nimport { IfullpageApi } from './FullPages'\nimport HomeIcon from './HomeIcon'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    position: 'fixed',\n    right: 0,\n    top: 0,\n    zIndex: 2,\n  },\n  homeIcon: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n}))\n\ninterface ResponsiveMenuProps {\n  fullpageApi: IfullpageApi\n}\n\nconst ResponsiveMenu: React.FC<ResponsiveMenuProps> = props => {\n  const classes = useStyles()\n\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <div id=\"myMenu\" className={classes.root}>\n      <Hidden smUp>\n        <IconButton aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n          <MenuIcon />\n        </IconButton>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n        >\n          <MenuItem\n            className={classes.homeIcon}\n            onClick={() => {\n              setAnchorEl(null)\n              props.fullpageApi.moveTo(1)\n            }}\n          >\n            <HomeIcon\n              onClick={() => {\n                setAnchorEl(null)\n                props.fullpageApi.moveTo(1)\n              }}\n            />\n          </MenuItem>\n          {buttonList.map((button: IButton, i: number) => (\n            <MenuItem\n              onClick={() => {\n                setAnchorEl(null)\n                props.fullpageApi.moveTo(i + 2)\n              }}\n            >\n              {button.name}\n            </MenuItem>\n          ))}\n        </Menu>\n      </Hidden>\n    </div>\n  )\n}\n\nexport default ResponsiveMenu\n","import { Typography } from '@material-ui/core'\nimport React from 'react'\n\ninterface StyledTextH2Props {}\nconst StyledTextH2: React.FC<StyledTextH2Props> = props => {\n  return <Typography variant=\"h2\">{props.children}</Typography>\n}\n\nexport default StyledTextH2\n","import { Typography } from '@material-ui/core'\nimport React from 'react'\n\ninterface StyledTextH3Props {}\nconst StyledTextH3: React.FC<StyledTextH3Props> = props => {\n  return <Typography variant=\"h3\">{props.children}</Typography>\n}\n\nexport default StyledTextH3\n","import { Link, Typography } from '@material-ui/core'\nimport React from 'react'\n\ninterface StyledTextLinkProps {}\nconst StyledTextLink: React.FC<StyledTextLinkProps> = props => {\n  const mailLink = `mailto:${props.children}`\n  return (\n    <Typography variant=\"h3\">\n      <Link href={mailLink} color=\"inherit\" variant=\"inherit\">\n        {props.children}\n      </Link>\n    </Typography>\n  )\n}\n\nexport default StyledTextLink\n","import { Grid, GridSpacing, IconButton, makeStyles } from '@material-ui/core'\nimport FacebookIcon from '@material-ui/icons/Facebook'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport React, { useState } from 'react'\nimport StyledTextH2 from '../common/StyledTextH2'\nimport StyledTextH3 from '../common/StyledTextH3'\nimport StyledTextLink from '../common/StyledTextLink'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    color: '#0f0',\n    textAlign: 'center',\n  },\n  paper: {\n    height: 140,\n    width: 100,\n  },\n  control: {\n    padding: theme.spacing(9),\n  },\n  icon: {\n    minWidth: '30px',\n  },\n}))\n\ninterface ContactSectionProps {}\nexport const ContactSection: React.FC<ContactSectionProps> = props => {\n  const classes = useStyles()\n  const [spacing] = useState<GridSpacing>(2)\n\n  return (\n    <div className=\"section\">\n      <div className={classes.root}>\n        <StyledTextH2>CONTACT</StyledTextH2>\n        <StyledTextH3>Feel free to contact me.</StyledTextH3>\n        <StyledTextLink>Pornchanok.A@alumni.chula.ac.th</StyledTextLink>\n        <StyledTextH3>Tel: +66917689666</StyledTextH3>\n        <Grid item xs={12}>\n          <Grid container justify=\"center\" spacing={spacing}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Github.com\"\n              onClick={() => window.open('https://www.Github.com/spdy999')}\n            >\n              <GitHubIcon />\n            </IconButton>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Linkedin.com\"\n              onClick={() => window.open('https://www.Linkedin.com/in/pornchanok-ap')}\n            >\n              <LinkedInIcon />\n            </IconButton>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Linkedin.com\"\n              onClick={() => window.open('https://www.facebook.com/pornchanok.ap')}\n            >\n              <FacebookIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  )\n}\n","import { Box, Container, makeStyles } from '@material-ui/core'\nimport { withStyles } from '@material-ui/styles'\nimport React from 'react'\nimport StyledTextH2 from '../common/StyledTextH2'\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    paddingLeft: '10%',\n    fontWeight: 500,\n    alignContent: 'space-between',\n  },\n}))\n\nconst StyledNameText = withStyles({\n  root: {\n    fontWeight: 'bold',\n    fontSize: '3em',\n    m: 1,\n    textOverflow: 'ellipsis',\n    component: 'div',\n  },\n})(Box)\n\ninterface FirstSectionProps {}\nexport const FirstSection: React.FC<FirstSectionProps> = props => {\n  const classes = useStyles()\n\n  return (\n    <div className=\"section section1\">\n      <Container className={classes.container}>\n        <Box>\n          <StyledNameText>I'M</StyledNameText>\n          <StyledNameText>PORNCHANOK</StyledNameText>\n          <StyledNameText>AP.</StyledNameText>\n        </Box>\n        <Box mb={30}></Box>\n        <Box>\n          <StyledTextH2>WEB & MOBILE</StyledTextH2>\n          <StyledTextH2>DEVELOPER</StyledTextH2>\n        </Box>\n      </Container>\n    </div>\n  )\n}\nexport default FirstSection\n","import React from 'react'\n\ninterface SlideSectionProps {}\nexport const SlideSection: React.FC<SlideSectionProps> = props => {\n  return (\n    <div className=\"section\">\n      <div className=\"slide\">\n        <h3>Slide 2.1</h3>\n      </div>\n      <div className=\"slide\">\n        <h3>Slide 2.2</h3>\n      </div>\n      <div className=\"slide\">\n        <h3>Slide 2.3</h3>\n      </div>\n    </div>\n  )\n}\n","import ReactFullpage from '@fullpage/react-fullpage'\nimport React from 'react'\nimport NavBar from './NavBar'\nimport ResponsiveMenu from './ResponsiveMenu'\nimport { ContactSection } from './Sections/ContactSection'\nimport FirstSection from './Sections/FirstSection'\nimport { SlideSection } from './Sections/SlideSection'\n\ninterface FullPagesProps {}\n\nexport interface IfullpageApi {\n  moveTo: (a: number) => void\n}\nexport const FullPages: React.FC<FullPagesProps> = props => {\n  return (\n    <ReactFullpage\n      scrollOverflow={true}\n      sectionsColor={['', 'orange', 'purple', 'green']}\n      anchors={['firstPage', 'secondPage', 'thirdPage', 'fourthPage', 'lastPage']}\n      menu={'#myMenu'}\n      render={props => {\n        return (\n          <div>\n            <NavBar fullpageApi={props.fullpageApi} />\n            <ResponsiveMenu fullpageApi={props.fullpageApi} />\n            <div id=\"fullpage-wrapper\">\n              <FirstSection />\n              <SlideSection />\n              <div className=\"section\">\n                <h3>Section 3</h3>\n                <button onClick={() => props.fullpageApi.moveTo(1)}>Move top</button>\n              </div>\n              <div className=\"section\">\n                <h3>Section 4</h3>\n              </div>\n              <ContactSection />\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n}\n","import { createMuiTheme, CssBaseline, ThemeProvider, useMediaQuery } from '@material-ui/core'\nimport React from 'react'\nimport './App.css'\nimport { FullPages } from './components/FullPages'\n\nfunction App() {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)')\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: {\n            main: '#000',\n            contrastText: '#fff',\n          },\n          text: {\n            primary: '#fff',\n          },\n        },\n        breakpoints: {\n          values: {\n            xs: 0,\n            sm: 600,\n            md: 960,\n            lg: 1280,\n            xl: 1920,\n          },\n        },\n        overrides: {\n          MuiTypography: {\n            root: {\n              marginBlockStart: '0.5em',\n              marginBlockEnd: '0.5em',\n            },\n            h1: {\n              fontSize: '2rem',\n            },\n            h2: {\n              fontSize: '1.5rem',\n            },\n            h3: {\n              fontSize: '1rem',\n            },\n          },\n        },\n      }),\n    [prefersDarkMode]\n  )\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <FullPages />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}